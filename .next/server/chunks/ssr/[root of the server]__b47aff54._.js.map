{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/soswo/OneDrive/Desktop/spa-dashboard/src/app/reset/%5Bcode%5D/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Image from \"next/image\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"next/navigation\";\r\nimport axios from \"axios\";\r\nimport { Eye, EyeOff } from \"lucide-react\";\r\n\r\nconst BURL = process.env.NEXT_PUBLIC_APP_URL;\r\n\r\nexport default function ResetPasswordPage() {\r\n  const { code } = useParams();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [showNewPassword, setShowNewPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n  const validatePassword = (password: string) => {\r\n    const passwordRegex = /^(?=.*[A-Z])(?=.*[^A-Za-z0-9])(?=.{8,})/;\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const handleReset = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    if (!code) {\r\n      setError(\"Reset code is missing. Please use the reset link sent to your email.\");\r\n      return;\r\n    }\r\n\r\n    if (!email) {\r\n      setError(\"Please provide your email.\");\r\n      return;\r\n    }\r\n\r\n    if (!validatePassword(newPassword)) {\r\n      setError(\"New password must be at least 8 characters, include one capital letter and one special character.\");\r\n      return;\r\n    }\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      setError(\"New password and confirmation do not match.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.post(`${BURL}/auth/reset/${code}`, {\r\n        email,\r\n        password: newPassword,\r\n      });\r\n\r\n      const msg = response.data?.message || \"Password reset successfully. You may now log in.\";\r\n      setSuccess(msg);\r\n      setEmail(\"\");\r\n      setNewPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n    } catch (err: any) {\r\n      const msg = err.response?.data?.message || \"Something went wrong. Please try again.\";\r\n      setError(msg);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative h-screen w-screen\">\r\n      {/* Background Image */}\r\n      <div\r\n        className=\"absolute inset-0 bg-cover bg-center\"\r\n        style={{ backgroundImage: `url('/Images/spa.jpeg')` }}\r\n      />\r\n\r\n      {/* Black Overlay */}\r\n      <div className=\"absolute inset-0 bg-black/60\" />\r\n\r\n      {/* Logo */}\r\n      <div className=\"absolute top-4 left-4 z-20\">\r\n        <div className=\"w-28 sm:w-36 md:w-40\">\r\n          <Image\r\n            src=\"/Images/logo.png\"\r\n            alt=\"Logo\"\r\n            width={160}\r\n            height={50}\r\n            className=\"w-full h-auto\"\r\n            priority\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Reset Password Card */}\r\n      <div className=\"relative z-10 flex h-full w-full items-center justify-center px-4 sm:px-6\">\r\n        <div className=\"w-full max-w-sm sm:max-w-md md:max-w-lg rounded-2xl bg-[#1E3B5C] p-6 sm:p-8 shadow-2xl\">\r\n          <h2 className=\"mb-6 text-center text-2xl font-semibold text-white\">\r\n            Reset Password\r\n          </h2>\r\n\r\n          {error && (\r\n            <div className=\"mb-4 rounded-md bg-red-100 px-4 py-2 text-sm text-red-700\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          {success && (\r\n            <div className=\"mb-4 rounded-md bg-green-100 px-4 py-2 text-sm text-green-700\">\r\n              {success}\r\n            </div>\r\n          )}\r\n\r\n          <form className=\"space-y-4\" onSubmit={handleReset}>\r\n            {/* Email */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-white\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n                className=\"mt-1 w-full rounded-md bg-white border border-gray-300 px-3 py-2 text-black focus:outline-none focus:ring-2 focus:ring-[#289C9A]\"\r\n                placeholder=\"you@example.com\"\r\n              />\r\n            </div>\r\n\r\n            {/* New Password */}\r\n            <div className=\"relative\">\r\n              <label className=\"block text-sm font-medium text-white\">New Password</label>\r\n              <input\r\n                type={showNewPassword ? \"text\" : \"password\"}\r\n                value={newPassword}\r\n                onChange={(e) => setNewPassword(e.target.value)}\r\n                required\r\n                className=\"mt-1 w-full rounded-md bg-white border border-gray-300 px-3 py-2 pr-10 text-black focus:outline-none focus:ring-2 focus:ring-[#289C9A]\"\r\n                placeholder=\"••••••••\"\r\n              />\r\n              <div\r\n                onClick={() => setShowNewPassword(!showNewPassword)}\r\n                className=\"absolute top-9 right-3 cursor-pointer text-gray-600\"\r\n              >\r\n                {showNewPassword ? <EyeOff size={18} /> : <Eye size={18} />}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Confirm Password */}\r\n            <div className=\"relative\">\r\n              <label className=\"block text-sm font-medium text-white\">Confirm New Password</label>\r\n              <input\r\n                type={showConfirmPassword ? \"text\" : \"password\"}\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                required\r\n                className=\"mt-1 w-full rounded-md bg-white border border-gray-300 px-3 py-2 pr-10 text-black focus:outline-none focus:ring-2 focus:ring-[#289C9A]\"\r\n                placeholder=\"••••••••\"\r\n              />\r\n              <div\r\n                onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                className=\"absolute top-9 right-3 cursor-pointer text-gray-600\"\r\n              >\r\n                {showConfirmPassword ? <EyeOff size={18} /> : <Eye size={18} />}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Submit */}\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"w-full flex justify-center items-center gap-2 rounded-md bg-[#289C9A] px-4 py-2 text-white hover:bg-[#207372] transition disabled:opacity-60 disabled:cursor-not-allowed\"\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <svg\r\n                    className=\"h-5 w-5 animate-spin text-white\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <circle\r\n                      className=\"opacity-25\"\r\n                      cx=\"12\"\r\n                      cy=\"12\"\r\n                      r=\"10\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"4\"\r\n                    />\r\n                    <path\r\n                      className=\"opacity-75\"\r\n                      fill=\"currentColor\"\r\n                      d=\"M4 12a8 8 0 018-8v4l3-3-3-3v4a8 8 0 00-8 8h4z\"\r\n                    />\r\n                  </svg>\r\n                  Updating...\r\n                </>\r\n              ) : (\r\n                \"Update Password\"\r\n              )}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}